unit CMC.MMEAPI;

interface

{$IFDEF FPC}
{$MODE delphi}
{$ENDIF}

uses
    Windows, Classes,
    CMC.MMSysCom;

const
    { ***************************************************************************

      Waveform audio support

      *************************************************************************** }

    { waveform audio error return values }
    WAVERR_BADFORMAT = (WAVERR_BASE + 0); { unsupported wave format }
    WAVERR_STILLPLAYING = (WAVERR_BASE + 1); { still something playing }
    WAVERR_UNPREPARED = (WAVERR_BASE + 2); { header not prepared }
    WAVERR_SYNC = (WAVERR_BASE + 3); { device is synchronous }
    WAVERR_LASTERROR = (WAVERR_BASE + 3); { last error in range }

    { }
    { MIXERCONTROL.fdwControl }
    { }
    { }
    MIXERCONTROL_CONTROLF_UNIFORM = $00000001;
    MIXERCONTROL_CONTROLF_MULTIPLE = $00000002;
    MIXERCONTROL_CONTROLF_DISABLED = $80000000;

    { }
    { MIXERCONTROL_CONTROLTYPE_xxx building block defines }
    { }
    { }
    MIXERCONTROL_CT_CLASS_MASK = $F0000000;
    MIXERCONTROL_CT_CLASS_CUSTOM = $00000000;
    MIXERCONTROL_CT_CLASS_METER = $10000000;
    MIXERCONTROL_CT_CLASS_SWITCH = $20000000;
    MIXERCONTROL_CT_CLASS_NUMBER = $30000000;
    MIXERCONTROL_CT_CLASS_SLIDER = $40000000;
    MIXERCONTROL_CT_CLASS_FADER = $50000000;
    MIXERCONTROL_CT_CLASS_TIME = $60000000;
    MIXERCONTROL_CT_CLASS_LIST = $70000000;

    MIXERCONTROL_CT_SUBCLASS_MASK = $0F000000;

    MIXERCONTROL_CT_SC_SWITCH_BOOLEAN = $00000000;
    MIXERCONTROL_CT_SC_SWITCH_BUTTON = $01000000;

    MIXERCONTROL_CT_SC_METER_POLLED = $00000000;

    MIXERCONTROL_CT_SC_TIME_MICROSECS = $00000000;
    MIXERCONTROL_CT_SC_TIME_MILLISECS = $01000000;

    MIXERCONTROL_CT_SC_LIST_SINGLE = $00000000;
    MIXERCONTROL_CT_SC_LIST_MULTIPLE = $01000000;

    MIXERCONTROL_CT_UNITS_MASK = $00FF0000;
    MIXERCONTROL_CT_UNITS_CUSTOM = $00000000;
    MIXERCONTROL_CT_UNITS_BOOLEAN = $00010000;
    MIXERCONTROL_CT_UNITS_SIGNED = $00020000;
    MIXERCONTROL_CT_UNITS_UNSIGNED = $00030000;
    MIXERCONTROL_CT_UNITS_DECIBELS = $00040000; { in 10ths }
    MIXERCONTROL_CT_UNITS_PERCENT = $00050000; { in 10ths }

    { }
    { Commonly used control types for specifying MIXERCONTROL.dwControlType }
    { }

    MIXERCONTROL_CONTROLTYPE_CUSTOM = (MIXERCONTROL_CT_CLASS_CUSTOM or MIXERCONTROL_CT_UNITS_CUSTOM);
    MIXERCONTROL_CONTROLTYPE_BOOLEANMETER = (MIXERCONTROL_CT_CLASS_METER or MIXERCONTROL_CT_SC_METER_POLLED or MIXERCONTROL_CT_UNITS_BOOLEAN);
    MIXERCONTROL_CONTROLTYPE_SIGNEDMETER = (MIXERCONTROL_CT_CLASS_METER or MIXERCONTROL_CT_SC_METER_POLLED or MIXERCONTROL_CT_UNITS_SIGNED);
    MIXERCONTROL_CONTROLTYPE_PEAKMETER = (MIXERCONTROL_CONTROLTYPE_SIGNEDMETER + 1);
    MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER = (MIXERCONTROL_CT_CLASS_METER or MIXERCONTROL_CT_SC_METER_POLLED or MIXERCONTROL_CT_UNITS_UNSIGNED);
    MIXERCONTROL_CONTROLTYPE_BOOLEAN = (MIXERCONTROL_CT_CLASS_SWITCH or MIXERCONTROL_CT_SC_SWITCH_BOOLEAN or MIXERCONTROL_CT_UNITS_BOOLEAN);
    MIXERCONTROL_CONTROLTYPE_ONOFF = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 1);
    MIXERCONTROL_CONTROLTYPE_MUTE = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 2);
    MIXERCONTROL_CONTROLTYPE_MONO = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 3);
    MIXERCONTROL_CONTROLTYPE_LOUDNESS = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 4);
    MIXERCONTROL_CONTROLTYPE_STEREOENH = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 5);
    MIXERCONTROL_CONTROLTYPE_BASS_BOOST = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + $00002277);
    MIXERCONTROL_CONTROLTYPE_BUTTON = (MIXERCONTROL_CT_CLASS_SWITCH or MIXERCONTROL_CT_SC_SWITCH_BUTTON or MIXERCONTROL_CT_UNITS_BOOLEAN);
    MIXERCONTROL_CONTROLTYPE_DECIBELS = (MIXERCONTROL_CT_CLASS_NUMBER or MIXERCONTROL_CT_UNITS_DECIBELS);
    MIXERCONTROL_CONTROLTYPE_SIGNED = (MIXERCONTROL_CT_CLASS_NUMBER or MIXERCONTROL_CT_UNITS_SIGNED);
    MIXERCONTROL_CONTROLTYPE_UNSIGNED = (MIXERCONTROL_CT_CLASS_NUMBER or MIXERCONTROL_CT_UNITS_UNSIGNED);
    MIXERCONTROL_CONTROLTYPE_PERCENT = (MIXERCONTROL_CT_CLASS_NUMBER or MIXERCONTROL_CT_UNITS_PERCENT);
    MIXERCONTROL_CONTROLTYPE_SLIDER = (MIXERCONTROL_CT_CLASS_SLIDER or MIXERCONTROL_CT_UNITS_SIGNED);
    MIXERCONTROL_CONTROLTYPE_PAN = (MIXERCONTROL_CONTROLTYPE_SLIDER + 1);
    MIXERCONTROL_CONTROLTYPE_QSOUNDPAN = (MIXERCONTROL_CONTROLTYPE_SLIDER + 2);
    MIXERCONTROL_CONTROLTYPE_FADER = (MIXERCONTROL_CT_CLASS_FADER or MIXERCONTROL_CT_UNITS_UNSIGNED);
    MIXERCONTROL_CONTROLTYPE_VOLUME = (MIXERCONTROL_CONTROLTYPE_FADER + 1);
    MIXERCONTROL_CONTROLTYPE_BASS = (MIXERCONTROL_CONTROLTYPE_FADER + 2);
    MIXERCONTROL_CONTROLTYPE_TREBLE = (MIXERCONTROL_CONTROLTYPE_FADER + 3);
    MIXERCONTROL_CONTROLTYPE_EQUALIZER = (MIXERCONTROL_CONTROLTYPE_FADER + 4);
    MIXERCONTROL_CONTROLTYPE_SINGLESELECT = (MIXERCONTROL_CT_CLASS_LIST or MIXERCONTROL_CT_SC_LIST_SINGLE or MIXERCONTROL_CT_UNITS_BOOLEAN);
    MIXERCONTROL_CONTROLTYPE_MUX = (MIXERCONTROL_CONTROLTYPE_SINGLESELECT + 1);
    MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT = (MIXERCONTROL_CT_CLASS_LIST or MIXERCONTROL_CT_SC_LIST_MULTIPLE or MIXERCONTROL_CT_UNITS_BOOLEAN);
    MIXERCONTROL_CONTROLTYPE_MIXER = (MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT + 1);
    MIXERCONTROL_CONTROLTYPE_MICROTIME = (MIXERCONTROL_CT_CLASS_TIME or MIXERCONTROL_CT_SC_TIME_MICROSECS or MIXERCONTROL_CT_UNITS_UNSIGNED);
    MIXERCONTROL_CONTROLTYPE_MILLITIME = (MIXERCONTROL_CT_CLASS_TIME or MIXERCONTROL_CT_SC_TIME_MILLISECS or MIXERCONTROL_CT_UNITS_UNSIGNED);

implementation

end.
